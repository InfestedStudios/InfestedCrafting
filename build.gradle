plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

description = 'InfestedCrafting'
group = 'org.infestedstudios'
version = 'v0.1.1'

repositories {
    mavenLocal()


    maven {
        url = uri('https://jitpack.io')
    }


    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }

    maven {
        name = 'lunarclient'
        url = 'https://repo.lunarclient.dev'
    }

    maven {
        url = uri('https://jitpack.io')
    }
    mavenCentral()
    maven {
        name = "spigotmc-repo"
        url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
}

dependencies {
    implementation 'org.javatuples:javatuples:1.2'
    implementation 'org.projectlombok:lombok:1.18.30'
    implementation 'com.google.code.gson:gson:2.10.1'
    implementation("com.github.cryptomorin:XSeries:11.2.0")
    implementation 'com.github.Temper126:JsonAPI:main-SNAPSHOT'


    compileOnly 'org.apache.commons:commons-lang3:3.8.1'



    // Lombok
    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'

    testCompileOnly 'org.projectlombok:lombok:1.18.30'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.30'
    compileOnly "org.spigotmc:spigot-api:1.20.6-R0.1-SNAPSHOT"
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

tasks {
    shadowJar {
        relocate 'com.cryptomorin.xseries', 'org.infestedstudios.crafting.xseries'
    }
}
